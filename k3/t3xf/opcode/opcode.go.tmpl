// Code generated from opcode.tmpl.go and by 'go generate'; DO NOT EDIT.
// This file was generated by robots at {{now}}

// Package opcode defines the opcodes used in T3XF.
package opcode

const (
	REF               Opcode = 0b0000
	GOTO              Opcode = 0b0001
	LINE              Opcode = 0b0010
	instrMask         Opcode = 0b0011
	reserved4         Opcode = 0b0100
	CALL              Opcode = 0b0101
	reseved6          Opcode = 0b0110
	reseved7          Opcode = 0b0111
	FROZEN_REF        Opcode = 0b1000
	ISCAN             Opcode = 0b1001
	reseved10         Opcode = 0b1010
	reseved11         Opcode = 0b1011
	reseved12         Opcode = 0b1100
	reseved13         Opcode = 0b1101
	reseved14         Opcode = 0b1110
	reseved15         Opcode = 0b1111

	{{ range $name, $op := . }}

	{{ comment $op.Description }}
	//
	// 	{{ $op.Operations.Pre }} {{ uc $name }} {{ $op.Operations.Post }}
	//
	{{ uc $name }} Opcode = {{ encode $op.Opcode }}{{ end }}
)

var Descriptions = map[Opcode]*Descriptor{
	{{ range $name, $op := . }}
		{{ uc $name }}: {
			Opcode: {{ encode $op.Opcode }},
			Description: {{ quote $op.Description }},
			Context: []string{ {{ range $ctx := $op.Context }}{{ quote $ctx }},{{ end }} },
			Operations: Operation{
				Pre: []string{ {{ range $pre := $op.Operations.Pre }}{{ quote $pre }},{{ end }} },
				Post: []string{ {{ range $post := $op.Operations.Post }}{{ quote $post }},{{ end }} },
			},
		},

	{{ end }}
}

var opcodeStrings = map[Opcode]string{
	REF:        "ref",
	LINE:       "line",
	GOTO:       "goto",
	FROZEN_REF: "frozen_ref",
	CALL: "call",
	ISCAN: "iscan",
	{{ range $name, $op := . }}
	{{ uc $name }}: "{{ $name }}",{{ end }}
}

var opcodeNames = map[string]Opcode{
	"ref":        REF,
	"line":       LINE,
	"goto":       GOTO,
	"frozen_ref": FROZEN_REF,
	"iscan": ISCAN,
	"call": CALL,
	{{ range $name, $op := . }}
	"{{ $name }}": {{ uc $name }},{{ end }}
}
