.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  before_script:
    - mkdir -p .go
  cache:
    paths:
      - .go/pkg/mod/

default:
  tags:
    - k3-nks-tiny

image: k3-local.artifactory-espoo2.int.net.nokia.com/k3ci/default:latest

stages:
  - build
  - test
  - deploy

golang:1.20:
  stage: test
  image: golang:1.20
  script:
    - go test ./...

golang:latest:
  stage: test
  image: golang:latest
  extends: .go-cache
  script:
    - go install gotest.tools/gotestsum@latest
    - $GOPATH/bin/gotestsum --junitfile report-junit.xml --format testname -- -race ./...
  artifacts:
    reports:
      junit: report-junit.xml

coverage:
  stage: test
  image: golang:latest
  extends: .go-cache
  needs: []
  script:
    - go install github.com/boumenot/gocover-cobertura@latest
    - go test -coverprofile=coverage.out -covermode count ./...
    - $GOPATH/bin/gocover-cobertura <coverage.out >report-coverage.xml
  coverage: '/coverage: \d+.\d+% of statements/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: report-coverage.xml
lint:
  stage: test
  image: golangci/golangci-lint:v1.59.1
  needs: []
  script:
    - golangci-lint run --color=always --issues-exit-code=0 --out-format=code-climate:report-lint.json,colored-line-number:stdout
  artifacts:
    reports:
      codequality: report-lint.json
    paths:
      - report-lint.json

trigger-k3:
  stage: test
  variables:
    NTT_COMMIT_SHA: ${CI_COMMIT_SHA}
  needs: []
  trigger:
    project: k3/k3
    strategy: depend

update-k3:
  stage: deploy
  only:
    refs:
      - master
  script:
    - .gitlab/update-k3
